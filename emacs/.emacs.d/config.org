* Terminal
** Setting default shell tmux
#+BEGIN_SRC emacs-lisp
  (defvar my-term-shell "/bin/bash")
  (defadvice ansi-term (before force-bash)
    (interactive (list my-term-shell)))
  (ad-activate 'ansi-term)
#+END_SRC
** Setting the shortcut as super and enter for ansi term
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "<M-return>") 'ansi-term)
#+END_SRC
* Plugins
** Which key setup
*** Installation and Initialization
#+BEGIN_SRC emacs-lisp
  (use-package which-key
    :ensure t            ;; makes sure package is installed
    :init
    (which-key-mode))
#+END_SRC
** Evil
*** Automatic install 
#+BEGIN_SRC emacs-lisp
  (use-package evil
    :ensure t
    :init
    (evil-mode 1))
#+End_SRC
** Yasnippet
*** Automatic install
#+BEGIN_SRC emacs-lisp
  (use-package yasnippet
    :ensure t
    :config
    (use-package yasnippet-snippets
      :ensure t)
    (yas-reload-all))
#+END_SRC
** Magit
*** Automatic install
#+BEGIN_SRC emacs-lisp
  (unless (package-installed-p 'magit)
  (package-refresh-contents)
    (package-install 'magit))
#+END_SRC
** Rainbow Mode
#+BEGIN_SRC emacs-lisp
  (unless (package-installed-p 'rainbow-mode)
    (package-refresh-contents)
    (package-install 'rainbow-mode))
#+END_SRC
* Alias
** Yes/No 
#+BEGIN_SRC emacs-lisp
(defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC

* General show hide stuff 
** Removing ugly UI
#+BEGIN_SRC emacs-lisp
(tool-bar-mode -1)
(setq inhibit-startup-message t)
(menu-bar-mode -1)
(scroll-bar-mode -1)    
(global-visual-line-mode 1)
(require 'rainbow-mode)
#+END_SRC
** Line numbering
#+BEGIN_SRC emacs-lisp
(global-display-line-numbers-mode 1)
(setq display-line-numbers-type 'relative)
#+END_SRC
* Avy
#+BEGIN_SRC emacs-lisp
  (use-package avy
    :ensure t
    :bind
    ("M-s" . avy-goto-char))
#+END_SRC
* Hook
** Rainbow Mode
(add-hook 'css-mode-hook 'rainbow-mode)
(add-hook 'haskell-mode-hook 'rainbow-mode)
* Config Reload/Edit
** Edit
#+BEGIN_SRC emacs-lisp
  (defun config-visit()
    (interactive)
    (find-file "~/.emacs.d/config.org"))
  (global-set-key (kbd "C-c e") 'config-visit)
#+END_SRC
** Reload
#+BEGIN_SRC emacs-lisp
  (defun config-reload()
    (interactive)
    (org-babel-load-file (expand-file-name "~/.emacs.d/config.org")))
  (global-set-key (kbd "C-c r") 'config-reload)
#+END_SRC
** Bspwm
#+BEGIN_SRC emacs-lisp
  (defun config-bspwm()
    (interactive)
    (find-file (expand-file-name "~/.config/bspwm/bspwmrc")))
  (global-set-key (kbd "C-c b") 'config-bspwm)
#+END_SRC
** XMonad
#+BEGIN_SRC emacs-lisp
  (defun config-xmonad()
    (interactive)
    (find-file (expand-file-name "~/.xmonad/xmonad.hs")))
  (global-set-key (kbd "C-c x") 'config-xmonad)
#+END_SRC
** Sxhkd
#+BEGIN_SRC emacs-lisp
  (defun config-sxhkd()
    (interactive)
    (find-file (expand-file-name "~/.config/sxhkd/sxhkdrc")))
  (global-set-key (kbd "C-c s") 'config-sxhkd)
#+END_SRC
** Zshrc
#+BEGIN_SRC emacs-lisp
  (defun config-zshrc()
    (interactive)
    (find-file (expand-file-name"~/.zshrc")))
  (global-set-key (kbd "C-c z") 'config-zshrc)
#+END_SRC
** Compile C++
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-c c") 'compile)
#+END_SRC
